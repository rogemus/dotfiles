{
  "else": {
    "prefix": "el",
    "body": "else {\n${0:${VISUAL}}\n}"
  },
  "for range loop": {
    "prefix": "forr",
    "body": "for ${1:e} := range ${2:collection} {\n${0:${VISUAL}}\n}"
  },
  "full interface ": {
    "prefix": "inf",
    "body": "type ${1:name} interface {\n${2:/* methods */}\n}"
  },
  "func main()": {
    "prefix": "main",
    "body": "func main() {\n${1}\n}\n${0}"
  },
  "function": {
    "prefix": "fun",
    "body": "func ${1:funcName}(${2}) ${3:error} {\n${4}\n}\n${0}"
  },
  "http handler function on receiver": {
    "prefix": "fumh",
    "body": "func (${1:receiver} ${2:type}) ${3:funcName}(${4:w} http.ResponseWriter, ${5:r} *http.Request) {\n${0:${VISUAL}}\n}"
  },
  "if condition": {
    "prefix": "if",
    "body": "if $1 {\n${2:${VISUAL}}\n}"
  },
  "if else condition": {
    "prefix": "ife",
    "body": "if $1 {\n${2:${VISUAL}}\n} else {\n${0}\n}"
  },
  "if error not nil, return err": {
    "prefix": "ir",
    "body": "if err != nil {\nreturn err\n}\n${0}"
  },
  "method": {
    "prefix": "fum",
    "body": "func (${1:receiver} ${2:type}) ${3:funcName}(${4}) ${5:error} {\n${6}\n}\n${0}"
  },
  "struct": {
    "prefix": "st",
    "body": "type ${1:name} struct {\n${2:/* data */}\n}\n${0}"
  },
  "switch": {
    "prefix": "sw",
    "body": "switch ${1:var} {\ncase ${2:value1}:\n${3}\ncase ${4:value2}:\n${5}\ndefault:\n${0}\n}"
  },
  "table test function": {
    "prefix": "testt",
    "body": "func Test${1:name}(t *testing.T) {\ntests := []struct {\nname string\n}{\n{\nname: \"${2:test name}\",\n},\n}\nfor _, test := range tests {\nt.Run(test.name, func(t *testing.T) {\n${0:${VISUAL}}\n})\n}\n}"
  },
  "test function": {
    "prefix": "test",
    "body": "func Test${1:name}(t *testing.T) {\n${0:${VISUAL}}\n}"
  }
}
